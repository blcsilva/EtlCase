services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - airflow-network

  redis:
    image: redis:latest
    networks:
      - airflow-network

  airflow-init:
    image: apache/airflow:2.5.1
    command: airflow db init
    environment:
      AIRFLOW__CORE__FERNET_KEY: 'YOUR_FERNET_KEY_HERE'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/0'
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis

  airflow-scheduler:
    image: apache/airflow:2.5.1
    command: airflow scheduler
    restart: always
    environment:
      AIRFLOW__CORE__FERNET_KEY: 'YOUR_FERNET_KEY_HERE'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/0'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/usr/local/airflow/airflow.cfg  # Mapeia o arquivo local
      - ./dags:/usr/local/airflow/dags
      - ./data:/usr/local/airflow/data
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8793/health"]
      interval: 30s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.5.1
    command: airflow webserver
    ports:
      - "8080:8080"
    restart: always
    environment:
      AIRFLOW__CORE__FERNET_KEY: 'YOUR_FERNET_KEY_HERE'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/0'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/usr/local/airflow/airflow.cfg  # Mapeia o arquivo local
      - ./dags:/usr/local/airflow/dags
      - ./data:/usr/local/airflow/data
    networks:
      - airflow-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      retries: 5

volumes:
  postgres-db-volume:

networks:
  airflow-network:
    driver: bridge
